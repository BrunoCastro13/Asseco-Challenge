  name: CI/CD Pipeline

  on:
    push:
      branches: [ main ]
    pull_request:
      branches: [ main ]

  jobs:
    build:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: maven

        - name: Build with Maven
          run: mvn -B clean package --file pom.xml

        - name: Run tests
          run: mvn test

        - name: Generate JaCoCo report
          run: mvn jacoco:report

        - name: Upload JaCoCo report
          uses: actions/upload-artifact@v4
          with:
            name: jacoco-report
            path: target/site/jacoco/

        - name: Cache SonarCloud packages
          uses: actions/cache@v4
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar

        - name: Verify compiled classes
          run: |
            if [ -d "target/classes" ]; then
              echo "Compiled classes found at target/classes"
              ls -la target/classes
            else
              echo "ERROR: Compiled classes directory not found!"
              echo "Project structure:"
              find . -type d -name "classes" | grep -v "/\."
              exit 1
            fi

        - name: SonarCloud Scan
          uses: SonarSource/sonarqube-scan-action@v5.0.0
          with:
            args: >
              -Dsonar.projectKey=BrunoCastro13_Asseco-Challenge
              -Dsonar.organization=brunocastro13
              -Dsonar.sources=src/main/java
              -Dsonar.tests=src/test/java
              -Dsonar.java.binaries=target/classes
              -Dsonar.java.test.binaries=target/test-classes
              -Dsonar.junit.reportPaths=target/surefire-reports
              -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
              -Dsonar.sourceEncoding=UTF-8
              -Dsonar.verbose=true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: https://sonarcloud.io

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Extract Maven project version
          id: project
          run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

        - name: Build and push Docker image
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: |
              ghulamio/asseco-coin-game:${{ steps.project.outputs.version }}
              ghulamio/asseco-coin-game:latest
            cache-from: type=registry,ref=ghulamio/asseco-coin-game:latest
            cache-to: type=inline

    deploy:
      needs: build
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main'

      steps:
        - uses: actions/checkout@v3

        # Em um cenário real, aqui seria feito o deploy para o ambiente de produção.
        # Por exemplo, usando AWS ECS, Azure Web Apps, GCP Cloud Run, etc.
        - name: Deploy to Production (Simulation)
          run: |
            echo "Deploying to production..."
            echo "Application deployed successfully!"
